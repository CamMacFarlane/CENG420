Movie:
1.Rotten tomatoes rating
2.Ticket sales
3.MainActors / MainVoices
4.MovieType (cartoon, etc.)
5.Producer
6.Director
7.Genre
8.Length
9.ReleaseDate
 
Application 1: for people who are interested and wanted to watch a movie, the rating of the movie might seem more important to them.
 
Application 2: for movie producers, the ticket sales will be the most important attribute to them.
 
 
 
Soccer Team:
1.Country
2.TeamName
3.ACE player
4.Coach
5.Leader
6.Players
7.NumMatchesPlayed
 
Application 1: If a soccer team is playing in the World Cup, the country that the team represents is more important than other attributes
 
Application 2: If people are forming a All-Star team, then the ACE player of each team will be the more important attribute
 
 
 
 
House:
1.Total area (including lawn)
2.Building area(square feet)
3.Total area (including lawn)
4.Estimated price
5.Location
6.Year
7.Number of floors
8.Number of bedrooms
9.Number of bathrooms
10.Building Style
 
Application1:  the total area of the property will be important to people who want to buy this property for other purposes (build apartment, mall etc.)
 
Application2: for students who want to rent a house near their university, the location and the monthly rent will be important to them
 
 
 
 
Pizza:
1.Toppings
2.Recipe
3.Price
4.Sauce
5.Size
6.crust types
7.Producer
8.Shape (round or rectangle)
 
Application1: when doing a survey for people’s favourite crust type, obviously the crust type will be the only important attribute
 
Application2: when looking for a cheapest pizza, price and size of the pizza matter.
 
 
 
 
 
Distance function for Pizzas:
We can predefine the weights of each attribute based on our own knowledge for example:
Recipe 	    35%
Sauce 		    20%
Toppings 	  10%
Size 		     10%
Crust type 	10%
Shape 		    10%
Price 		    0%
Producer 	  5%

Calcualtions:

Recipe:	 (Xsteps ∩ Ysteps)  /  Max (Count(Xsteps), Count(Ysteps))
 
 
Sauce: 	 (Xsauces ∩ Ysauces)  /  Max (Count(Xsauces), Count(Ysauces))
 
 
Toppings: 	(Xtoppings ∩ Ytoppings)  /  Max (Count(Xtoppings), Count(Ytoppings))
 
 
Size:		1- (Max(Xsize,Ysize) - Min(Xsize,Ysize))/ Min(Xsize,Ysize))
 
 
Crust type:	1 if they are the same, 0 otherwise
 
 
shape :	1 if they are the same (either round or rectangle), 0 otherwise
 
 
Producer: 	1 if they are the same, 0 otherwise
 
 
The distance function returns the sum of the above calculations.
 
4. Define the overfitting and underfitting problems for feature selection, and give one example for each that will cause these problems
